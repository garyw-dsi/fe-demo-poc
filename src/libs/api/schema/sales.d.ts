/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/quotation/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Quotation */
        get: operations["list_quotation_quotation__get"];
        put?: never;
        /** Create Quotation */
        post: operations["create_quotation_quotation__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simulate/quotation/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Simulate Create Quotation */
        post: operations["simulate_create_quotation_simulate_quotation__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/quotation/{quotation_id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Retrieve Quotation */
        get: operations["retrieve_quotation_quotation__quotation_id___get"];
        /** Update Quotation */
        put: operations["update_quotation_quotation__quotation_id___put"];
        post?: never;
        /** Delete Quotation */
        delete: operations["delete_quotation_quotation__quotation_id___delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/options/quotation/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Quotation Option */
        get: operations["list_quotation_option_options_quotation__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simulate/quotation/{quotation_id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Simulate Update Quotation */
        put: operations["simulate_update_quotation_simulate_quotation__quotation_id___put"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/quotation/{quotation_id}/send_email/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Send Quotation Email */
        post: operations["send_quotation_email_quotation__quotation_id__send_email__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/quotation/{quotation_id}/approve/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Approve Quotation */
        post: operations["approve_quotation_quotation__quotation_id__approve__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/quotation/{quotation_id}/cancel/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Cancel Quotation */
        post: operations["cancel_quotation_quotation__quotation_id__cancel__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/order/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Order */
        get: operations["list_order_order__get"];
        put?: never;
        /** Create Order */
        post: operations["create_order_order__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simulate/order/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Simulate Create Order */
        post: operations["simulate_create_order_simulate_order__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/order/{order_id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Retrieve Order */
        get: operations["retrieve_order_order__order_id___get"];
        /** Update Order */
        put: operations["update_order_order__order_id___put"];
        post?: never;
        /** Delete Order */
        delete: operations["delete_order_order__order_id___delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/options/order/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Order Option */
        get: operations["list_order_option_options_order__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simulate/order/{order_id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Simulate Update Order */
        put: operations["simulate_update_order_simulate_order__order_id___put"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/order/{order_id}/send_email/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Send Order Email */
        post: operations["send_order_email_order__order_id__send_email__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/order/{order_id}/approve/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Approve Order */
        post: operations["approve_order_order__order_id__approve__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/order/{order_id}/cancel/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Cancel Order */
        post: operations["cancel_order_order__order_id__cancel__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/invoice/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Invoice */
        get: operations["list_invoice_invoice__get"];
        put?: never;
        /** Create Invoice */
        post: operations["create_invoice_invoice__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simulate/invoice/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create Invoice */
        post: operations["create_invoice_simulate_invoice__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/invoice/{invoice_id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Retrieve Invoice */
        get: operations["retrieve_invoice_invoice__invoice_id___get"];
        /** Update Invoice */
        put: operations["update_invoice_invoice__invoice_id___put"];
        post?: never;
        /** Delete Invoice */
        delete: operations["delete_invoice_invoice__invoice_id___delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/options/invoice/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Invoice Option */
        get: operations["list_invoice_option_options_invoice__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/simulate/invoice/{invoice_id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Update Invoice */
        put: operations["update_invoice_simulate_invoice__invoice_id___put"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/invoice/{invoice_id}/send_email/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Send Invoice Email */
        post: operations["send_invoice_email_invoice__invoice_id__send_email__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/invoice/{invoice_id}/approve/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Approve Invoice */
        post: operations["approve_invoice_invoice__invoice_id__approve__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/invoice/{invoice_id}/cancel/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Cancel Invoice */
        post: operations["cancel_invoice_invoice__invoice_id__cancel__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** ContactImageURL */
        ContactImageURL: {
            /** Url */
            url: string | null;
        };
        /**
         * ContactLegalType
         * @enum {string}
         */
        ContactLegalType: "Individual" | "Partnership" | "Limited Partnership" | "Limited Liability Partnership" | "Limited Liability Company" | "Public Limited Company" | "Private Limited Company" | "Corporation" | "Nonprofit Organization" | "Cooperative" | "Trust" | "Government Agency";
        /** ContactMin */
        ContactMin: {
            /** Pk */
            pk: number;
            /** Name */
            name: string;
            legal_type: components["schemas"]["ContactLegalType"];
            image: components["schemas"]["ContactImageURL"];
            parent: components["schemas"]["ContactMin"] | null;
        };
        /** Country */
        Country: {
            /** Pk */
            pk: number;
            /** Name */
            name: string;
            /** Iso A2 */
            iso_a2: string;
            /** Iso A3 */
            iso_a3: string;
            /** Iso N */
            iso_n: number;
        };
        /** CurrencyMin */
        CurrencyMin: {
            /** Pk */
            pk: number;
            /** Name */
            name: string;
            /** Iso */
            iso: string;
            /** Symbol */
            symbol: string | null;
        };
        /** CustomerMin */
        CustomerMin: {
            /** Pk */
            pk: number;
            contact: components["schemas"]["ContactMin"];
        };
        /** HTTPValidationError */
        HTTPValidationError: {
            /** Detail */
            detail?: components["schemas"]["ValidationError"][];
        };
        /** Invoice */
        Invoice: {
            /** Pk */
            pk: number;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            /**
             * Last Modified At
             * Format: date-time
             */
            last_modified_at: string;
            created_by: components["schemas"]["UserMin"];
            last_modified_by: components["schemas"]["UserMin"] | null;
            /** Notes */
            notes: string | null;
            /** Discount Rate */
            discount_rate: string | null;
            /** Invoice Id */
            invoice_id: string;
            status: components["schemas"]["InvoiceStatus"];
            /** Total */
            total: string;
            /** Total Discount */
            total_discount: string;
            /** Total Vat */
            total_vat: string;
            /** Total Net */
            total_net: string;
            order: components["schemas"]["OrderMin"];
            /** Total Paid */
            total_paid: string;
            /** Items */
            items: components["schemas"]["InvoiceItem"][];
        };
        /** InvoiceCreate */
        InvoiceCreate: {
            /** Notes */
            notes: string | null;
            /** Discount Rate */
            discount_rate: number | string | null;
            /** Order Id */
            order_id: number;
            /** Items */
            items: components["schemas"]["InvoiceItemWrite"][];
        };
        /** InvoiceEmailSend */
        InvoiceEmailSend: {
            /** Email */
            email: string;
        };
        /** InvoiceItem */
        InvoiceItem: {
            /** Pk */
            pk: number;
            /** Quantity */
            quantity: string;
            /** Price */
            price: string;
            /** Discount Rate */
            discount_rate: string | null;
            /** Discount Amount */
            discount_amount: string | null;
            /** Vat Rate */
            vat_rate: string;
            /** Total */
            total: string;
            /** Total Discount */
            total_discount: string;
            /** Total Vat */
            total_vat: string;
            /** Total Net */
            total_net: string;
            order_item: components["schemas"]["OrderItem"];
            /** Total Paid */
            total_paid: string;
        };
        /** InvoiceItemWrite */
        InvoiceItemWrite: {
            /** Quantity */
            quantity: number | string;
            /** Price */
            price: number | string;
            /** Discount Rate */
            discount_rate: number | string | null;
            /** Discount Amount */
            discount_amount: number | string | null;
            /** Vat Rate */
            vat_rate: number | string;
            /** Order Item Id */
            order_item_id: number;
        };
        /** InvoiceList */
        InvoiceList: {
            /** Pk */
            pk: number;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            /**
             * Last Modified At
             * Format: date-time
             */
            last_modified_at: string;
            created_by: components["schemas"]["UserMin"];
            last_modified_by: components["schemas"]["UserMin"] | null;
            /** Notes */
            notes: string | null;
            /** Discount Rate */
            discount_rate: string | null;
            /** Invoice Id */
            invoice_id: string;
            status: components["schemas"]["InvoiceStatus"];
            /** Total */
            total: string;
            /** Total Discount */
            total_discount: string;
            /** Total Vat */
            total_vat: string;
            /** Total Net */
            total_net: string;
            order: components["schemas"]["OrderMin"];
            /** Total Paid */
            total_paid: string;
        };
        /** InvoiceOpt */
        InvoiceOpt: {
            /** Pk */
            pk: number;
            /** Invoice Id */
            invoice_id: string;
            status: components["schemas"]["InvoiceStatus"];
            order: components["schemas"]["OrderMin"] | null;
        };
        /**
         * InvoiceStatus
         * @enum {string}
         */
        InvoiceStatus: "Draft" | "Approved" | "Issued" | "Cancelled" | "Partially Paid" | "Over Paid" | "Paid";
        /** InvoiceUpdate */
        InvoiceUpdate: {
            /** Notes */
            notes: string | null;
            /** Discount Rate */
            discount_rate: number | string | null;
            /** Order Id */
            order_id: number;
            /** Items */
            items: components["schemas"]["InvoiceItemWrite"][];
        };
        /** LeadMin */
        LeadMin: {
            /** Pk */
            pk: number;
            /** Name */
            name: string;
            /** Lead Score */
            lead_score: string;
            /** Customer Name */
            customer_name: string | null;
            lead_status: components["schemas"]["LeadStatus"];
            /** Lead Id */
            lead_id: string;
            customer: components["schemas"]["CustomerMin"] | null;
        };
        /**
         * LeadStatus
         * @enum {string}
         */
        LeadStatus: "New" | "Contacted" | "Qualified" | "Quotation" | "Negotiation" | "Lost" | "Won" | "Discontinued";
        /** Order */
        Order: {
            /** Pk */
            pk: number;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            /**
             * Last Modified At
             * Format: date-time
             */
            last_modified_at: string;
            created_by: components["schemas"]["UserMin"];
            last_modified_by: components["schemas"]["UserMin"] | null;
            payment_term: components["schemas"]["TransactionPaymentTerm"];
            /** Payment N */
            payment_n: number | null;
            /** Payment Dp Rate */
            payment_dp_rate: string | null;
            /** Payment Dp */
            payment_dp: string | null;
            delivery_term: components["schemas"]["TransactionDeliveryTerm"] | null;
            /** Discount Rate */
            discount_rate: string | null;
            /** Notes */
            notes: string | null;
            /** Total */
            total: string;
            /** Total Discount */
            total_discount: string;
            /** Total Vat */
            total_vat: string;
            /** Total Net */
            total_net: string;
            status: components["schemas"]["TransactionStatus"];
            currency: components["schemas"]["CurrencyMin"];
            /** Items */
            items: components["schemas"]["OrderItem"][];
            approved_by: components["schemas"]["UserMin"] | null;
            /** Order Id */
            order_id: string;
            customer: components["schemas"]["CustomerMin"];
            quotation: components["schemas"]["QuotationMin"] | null;
        };
        /** OrderCreate */
        OrderCreate: {
            payment_term: components["schemas"]["TransactionPaymentTerm"];
            /** Payment N */
            payment_n: number | null;
            /** Payment Dp Rate */
            payment_dp_rate: number | string | null;
            /** Payment Dp */
            payment_dp: number | string | null;
            delivery_term: components["schemas"]["TransactionDeliveryTerm"] | null;
            /** Discount Rate */
            discount_rate: number | string | null;
            /** Notes */
            notes: string | null;
            /** Currency Id */
            currency_id: number;
            /** Items */
            items: components["schemas"]["TransactionItemWriteMixin"][];
            /** Customer Id */
            customer_id: number;
            /** Quotation Id */
            quotation_id: number | null;
        };
        /** OrderEmailSend */
        OrderEmailSend: {
            /** Email */
            email: string;
        };
        /** OrderItem */
        OrderItem: {
            /** Pk */
            pk: number;
            /** Quantity */
            quantity: string;
            /** Price */
            price: string;
            /** Discount Rate */
            discount_rate: string | null;
            /** Discount Amount */
            discount_amount: string | null;
            /** Vat Rate */
            vat_rate: string;
            /** Total */
            total: string;
            /** Total Discount */
            total_discount: string;
            /** Total Vat */
            total_vat: string;
            /** Total Net */
            total_net: string;
            vat: components["schemas"]["VATMin"] | null;
            product: components["schemas"]["ProductMin"];
        };
        /** OrderList */
        OrderList: {
            /** Pk */
            pk: number;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            /**
             * Last Modified At
             * Format: date-time
             */
            last_modified_at: string;
            created_by: components["schemas"]["UserMin"];
            last_modified_by: components["schemas"]["UserMin"] | null;
            /** Total */
            total: string;
            /** Total Discount */
            total_discount: string;
            /** Total Vat */
            total_vat: string;
            /** Total Net */
            total_net: string;
            status: components["schemas"]["TransactionStatus"];
            payment_term: components["schemas"]["TransactionPaymentTerm"] | null;
            delivery_term: components["schemas"]["TransactionDeliveryTerm"] | null;
            currency: components["schemas"]["CurrencyMin"];
            /** Order Id */
            order_id: string;
            customer: components["schemas"]["CustomerMin"];
            quotation: components["schemas"]["QuotationMin"] | null;
        };
        /** OrderMin */
        OrderMin: {
            /** Pk */
            pk: number;
            /** Total */
            total: string;
            /** Total Discount */
            total_discount: string;
            /** Total Vat */
            total_vat: string;
            /** Total Net */
            total_net: string;
            status: components["schemas"]["TransactionStatus"];
            payment_term: components["schemas"]["TransactionPaymentTerm"] | null;
            delivery_term: components["schemas"]["TransactionDeliveryTerm"] | null;
            currency: components["schemas"]["CurrencyMin"];
            /** Order Id */
            order_id: string;
            customer: components["schemas"]["CustomerMin"];
            quotation: components["schemas"]["QuotationMin"] | null;
        };
        /** OrderOpt */
        OrderOpt: {
            /** Pk */
            pk: number;
            /** Total */
            total: string;
            /** Total Discount */
            total_discount: string;
            /** Total Vat */
            total_vat: string;
            /** Total Net */
            total_net: string;
            status: components["schemas"]["TransactionStatus"];
            payment_term: components["schemas"]["TransactionPaymentTerm"] | null;
            delivery_term: components["schemas"]["TransactionDeliveryTerm"] | null;
            currency: components["schemas"]["CurrencyMin"];
            /** Order Id */
            order_id: string;
            customer: components["schemas"]["CustomerMin"];
            quotation: components["schemas"]["QuotationMin"] | null;
        };
        /** OrderUpdate */
        OrderUpdate: {
            payment_term: components["schemas"]["TransactionPaymentTerm"];
            /** Payment N */
            payment_n: number | null;
            /** Payment Dp Rate */
            payment_dp_rate: number | string | null;
            /** Payment Dp */
            payment_dp: number | string | null;
            delivery_term: components["schemas"]["TransactionDeliveryTerm"] | null;
            /** Discount Rate */
            discount_rate: number | string | null;
            /** Notes */
            notes: string | null;
            /** Currency Id */
            currency_id: number;
            /** Items */
            items: components["schemas"]["TransactionItemWriteMixin"][];
            /** Customer Id */
            customer_id: number;
        };
        /** PaginatedInvoice */
        PaginatedInvoice: {
            /** Total Items */
            total_items: number;
            /** Total Page */
            total_page: number;
            /** Page */
            page: number;
            /** Items */
            items: components["schemas"]["InvoiceList"][];
        };
        /** PaginatedInvoiceOpt */
        PaginatedInvoiceOpt: {
            /** Total Items */
            total_items: number;
            /** Total Page */
            total_page: number;
            /** Page */
            page: number;
            /** Items */
            items: components["schemas"]["InvoiceOpt"][];
        };
        /** PaginatedOrder */
        PaginatedOrder: {
            /** Total Items */
            total_items: number;
            /** Total Page */
            total_page: number;
            /** Page */
            page: number;
            /** Items */
            items: components["schemas"]["OrderList"][];
        };
        /** PaginatedOrderOpt */
        PaginatedOrderOpt: {
            /** Total Items */
            total_items: number;
            /** Total Page */
            total_page: number;
            /** Page */
            page: number;
            /** Items */
            items: components["schemas"]["OrderOpt"][];
        };
        /** PaginatedQuotation */
        PaginatedQuotation: {
            /** Total Items */
            total_items: number;
            /** Total Page */
            total_page: number;
            /** Page */
            page: number;
            /** Items */
            items: components["schemas"]["QuotationList"][];
        };
        /** PaginatedQuotationOpt */
        PaginatedQuotationOpt: {
            /** Total Items */
            total_items: number;
            /** Total Page */
            total_page: number;
            /** Page */
            page: number;
            /** Items */
            items: components["schemas"]["QuotationOpt"][];
        };
        /** ProductImageURL */
        ProductImageURL: {
            /** Url */
            url: string | null;
        };
        /** ProductMin */
        ProductMin: {
            /** Pk */
            pk: number;
            /** Name */
            name: string;
            /** Price */
            price: string | null;
            unit: components["schemas"]["Unit"];
            /** Stock */
            stock: string;
            image: components["schemas"]["ProductImageURL"];
        };
        /** Quotation */
        Quotation: {
            /** Pk */
            pk: number;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            /**
             * Last Modified At
             * Format: date-time
             */
            last_modified_at: string;
            created_by: components["schemas"]["UserMin"];
            last_modified_by: components["schemas"]["UserMin"] | null;
            payment_term: components["schemas"]["TransactionPaymentTerm"];
            /** Payment N */
            payment_n: number | null;
            /** Payment Dp Rate */
            payment_dp_rate: string | null;
            /** Payment Dp */
            payment_dp: string | null;
            delivery_term: components["schemas"]["TransactionDeliveryTerm"] | null;
            /** Discount Rate */
            discount_rate: string | null;
            /** Notes */
            notes: string | null;
            /** Total */
            total: string;
            /** Total Discount */
            total_discount: string;
            /** Total Vat */
            total_vat: string;
            /** Total Net */
            total_net: string;
            status: components["schemas"]["TransactionStatus"];
            currency: components["schemas"]["CurrencyMin"];
            /** Items */
            items: components["schemas"]["QuotationItem"][];
            approved_by: components["schemas"]["UserMin"] | null;
            /** Quotation Id */
            quotation_id: string;
            customer: components["schemas"]["CustomerMin"];
            lead: components["schemas"]["LeadMin"] | null;
        };
        /** QuotationCreate */
        QuotationCreate: {
            payment_term: components["schemas"]["TransactionPaymentTerm"];
            /** Payment N */
            payment_n: number | null;
            /** Payment Dp Rate */
            payment_dp_rate: number | string | null;
            /** Payment Dp */
            payment_dp: number | string | null;
            delivery_term: components["schemas"]["TransactionDeliveryTerm"] | null;
            /** Discount Rate */
            discount_rate: number | string | null;
            /** Notes */
            notes: string | null;
            /** Currency Id */
            currency_id: number;
            /** Items */
            items: components["schemas"]["TransactionItemWriteMixin"][];
            /** Customer Id */
            customer_id: number;
            /** Lead Id */
            lead_id: number | null;
        };
        /** QuotationEmailSend */
        QuotationEmailSend: {
            /** Email */
            email: string;
        };
        /** QuotationItem */
        QuotationItem: {
            /** Pk */
            pk: number;
            /** Quantity */
            quantity: string;
            /** Price */
            price: string;
            /** Discount Rate */
            discount_rate: string | null;
            /** Discount Amount */
            discount_amount: string | null;
            /** Vat Rate */
            vat_rate: string;
            /** Total */
            total: string;
            /** Total Discount */
            total_discount: string;
            /** Total Vat */
            total_vat: string;
            /** Total Net */
            total_net: string;
            vat: components["schemas"]["VATMin"] | null;
            product: components["schemas"]["ProductMin"];
        };
        /** QuotationList */
        QuotationList: {
            /** Pk */
            pk: number;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            /**
             * Last Modified At
             * Format: date-time
             */
            last_modified_at: string;
            created_by: components["schemas"]["UserMin"];
            last_modified_by: components["schemas"]["UserMin"] | null;
            /** Total */
            total: string;
            /** Total Discount */
            total_discount: string;
            /** Total Vat */
            total_vat: string;
            /** Total Net */
            total_net: string;
            status: components["schemas"]["TransactionStatus"];
            payment_term: components["schemas"]["TransactionPaymentTerm"] | null;
            delivery_term: components["schemas"]["TransactionDeliveryTerm"] | null;
            currency: components["schemas"]["CurrencyMin"];
            /** Quotation Id */
            quotation_id: string;
            customer: components["schemas"]["CustomerMin"];
            lead: components["schemas"]["LeadMin"] | null;
        };
        /** QuotationMin */
        QuotationMin: {
            /** Pk */
            pk: number;
            /** Total */
            total: string;
            /** Total Discount */
            total_discount: string;
            /** Total Vat */
            total_vat: string;
            /** Total Net */
            total_net: string;
            status: components["schemas"]["TransactionStatus"];
            payment_term: components["schemas"]["TransactionPaymentTerm"] | null;
            delivery_term: components["schemas"]["TransactionDeliveryTerm"] | null;
            currency: components["schemas"]["CurrencyMin"];
            /** Quotation Id */
            quotation_id: string;
            customer: components["schemas"]["CustomerMin"];
            lead: components["schemas"]["LeadMin"] | null;
        };
        /** QuotationOpt */
        QuotationOpt: {
            /** Pk */
            pk: number;
            /** Total */
            total: string;
            /** Total Discount */
            total_discount: string;
            /** Total Vat */
            total_vat: string;
            /** Total Net */
            total_net: string;
            status: components["schemas"]["TransactionStatus"];
            payment_term: components["schemas"]["TransactionPaymentTerm"] | null;
            delivery_term: components["schemas"]["TransactionDeliveryTerm"] | null;
            currency: components["schemas"]["CurrencyMin"];
            /** Quotation Id */
            quotation_id: string;
            customer: components["schemas"]["CustomerMin"];
            lead: components["schemas"]["LeadMin"] | null;
        };
        /** QuotationUpdate */
        QuotationUpdate: {
            payment_term: components["schemas"]["TransactionPaymentTerm"];
            /** Payment N */
            payment_n: number | null;
            /** Payment Dp Rate */
            payment_dp_rate: number | string | null;
            /** Payment Dp */
            payment_dp: number | string | null;
            delivery_term: components["schemas"]["TransactionDeliveryTerm"] | null;
            /** Discount Rate */
            discount_rate: number | string | null;
            /** Notes */
            notes: string | null;
            /** Currency Id */
            currency_id: number;
            /** Items */
            items: components["schemas"]["TransactionItemWriteMixin"][];
            /** Customer Id */
            customer_id: number;
            /** Lead Id */
            lead_id: number | null;
        };
        /**
         * TransactionDeliveryTerm
         * @enum {string}
         */
        TransactionDeliveryTerm: "Ex Works" | "Free Carrier" | "Carried Paid To" | "Carriage and Insurance Paid To" | "Delivery at Place" | "Delivery at Place Unloaded" | "Delivery Duty Paid" | "Free Alongside Ship" | "Free on Board" | "Cost and Freight";
        /** TransactionItemWriteMixin */
        TransactionItemWriteMixin: {
            /** Quantity */
            quantity: number | string;
            /** Price */
            price: number | string;
            /** Discount Rate */
            discount_rate: number | string | null;
            /** Discount Amount */
            discount_amount: number | string | null;
            /** Vat Rate */
            vat_rate: number | string;
            /** Vat Id */
            vat_id: number | null;
            /** Product Id */
            product_id: number;
        };
        /**
         * TransactionPaymentTerm
         * @enum {string}
         */
        TransactionPaymentTerm: "Cash on Delivery" | "Due in N days" | "End of Month" | "Due N days after end of month" | "Advance Payment" | "Down Payment" | "Staggered Payment";
        /**
         * TransactionStatus
         * @enum {string}
         */
        TransactionStatus: "Draft" | "Approved" | "Issued" | "Cancelled" | "Completed";
        /**
         * Unit
         * @enum {string}
         */
        Unit: "Piece" | "Kg" | "Litre" | "Meter" | "Square Meter" | "Cubic Meter" | "Box" | "Bag" | "Bottle" | "Can" | "Tube" | "Roll" | "Set" | "Pair" | "Dozen" | "Pack" | "Ream" | "Bundle" | "Kit" | "Unit" | "Other" | "Unknown" | "Custom";
        /** UserImageURL */
        UserImageURL: {
            /** Url */
            url: string | null;
        };
        /** UserMin */
        UserMin: {
            /** Pk */
            pk: number;
            /** First Name */
            first_name: string;
            /** Last Name */
            last_name: string;
            /**
             * Email
             * Format: email
             */
            email: string;
            image: components["schemas"]["UserImageURL"];
        };
        /** VATMin */
        VATMin: {
            /** Pk */
            pk: number;
            country: components["schemas"]["Country"] | null;
            /** Name */
            name: string;
            /** Rate */
            rate: string;
        };
        /** ValidationError */
        ValidationError: {
            /** Location */
            loc: (string | number)[];
            /** Message */
            msg: string;
            /** Error Type */
            type: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    list_quotation_quotation__get: {
        parameters: {
            query?: {
                page?: number;
                page_size?: number;
                status?: components["schemas"]["TransactionStatus"] | null;
                payment_term?: components["schemas"]["TransactionPaymentTerm"] | null;
                delivery_term?: components["schemas"]["TransactionDeliveryTerm"] | null;
                currency_id?: number | null;
                quotation_id__icontains?: string | null;
                customer___contact___name__icontains?: string | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedQuotation"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_quotation_quotation__post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["QuotationCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Quotation"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    simulate_create_quotation_simulate_quotation__post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["QuotationCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Quotation"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    retrieve_quotation_quotation__quotation_id___get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                quotation_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Quotation"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_quotation_quotation__quotation_id___put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                quotation_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["QuotationUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Quotation"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_quotation_quotation__quotation_id___delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                quotation_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    list_quotation_option_options_quotation__get: {
        parameters: {
            query?: {
                page?: number;
                page_size?: number;
                status?: components["schemas"]["TransactionStatus"] | null;
                payment_term?: components["schemas"]["TransactionPaymentTerm"] | null;
                delivery_term?: components["schemas"]["TransactionDeliveryTerm"] | null;
                currency_id?: number | null;
                quotation_id__icontains?: string | null;
                customer___contact___name__icontains?: string | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedQuotationOpt"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    simulate_update_quotation_simulate_quotation__quotation_id___put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                quotation_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["QuotationUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Quotation"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    send_quotation_email_quotation__quotation_id__send_email__post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                quotation_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["QuotationEmailSend"];
            };
        };
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    approve_quotation_quotation__quotation_id__approve__post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                quotation_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Quotation"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    cancel_quotation_quotation__quotation_id__cancel__post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                quotation_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Quotation"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    list_order_order__get: {
        parameters: {
            query?: {
                page?: number;
                page_size?: number;
                status?: components["schemas"]["TransactionStatus"] | null;
                payment_term?: components["schemas"]["TransactionPaymentTerm"] | null;
                delivery_term?: components["schemas"]["TransactionDeliveryTerm"] | null;
                currency_id?: number | null;
                quotation___quotation_id__icontains?: string | null;
                order_id__icontains?: string | null;
                customer___contact___name__icontains?: string | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedOrder"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_order_order__post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["OrderCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Order"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    simulate_create_order_simulate_order__post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["OrderCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Order"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    retrieve_order_order__order_id___get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                order_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Order"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_order_order__order_id___put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                order_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["OrderUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Order"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_order_order__order_id___delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                order_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    list_order_option_options_order__get: {
        parameters: {
            query?: {
                page?: number;
                page_size?: number;
                status?: components["schemas"]["TransactionStatus"] | null;
                payment_term?: components["schemas"]["TransactionPaymentTerm"] | null;
                delivery_term?: components["schemas"]["TransactionDeliveryTerm"] | null;
                currency_id?: number | null;
                quotation___quotation_id__icontains?: string | null;
                order_id__icontains?: string | null;
                customer___contact___name__icontains?: string | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedOrderOpt"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    simulate_update_order_simulate_order__order_id___put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                order_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["OrderUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Order"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    send_order_email_order__order_id__send_email__post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                order_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["OrderEmailSend"];
            };
        };
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    approve_order_order__order_id__approve__post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                order_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Order"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    cancel_order_order__order_id__cancel__post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                order_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Order"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    list_invoice_invoice__get: {
        parameters: {
            query?: {
                page?: number;
                page_size?: number;
                status?: components["schemas"]["InvoiceStatus"] | null;
                order_id?: number | null;
                invoice_id__icontains?: string | null;
                order___quotation___quotation_id__icontains?: string | null;
                order___order_id__icontains?: string | null;
                order___customer___contact___name__icontains?: string | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedInvoice"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_invoice_invoice__post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["InvoiceCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Invoice"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_invoice_simulate_invoice__post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["InvoiceCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Invoice"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    retrieve_invoice_invoice__invoice_id___get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                invoice_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Invoice"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_invoice_invoice__invoice_id___put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                invoice_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["InvoiceUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Invoice"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_invoice_invoice__invoice_id___delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                invoice_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    list_invoice_option_options_invoice__get: {
        parameters: {
            query?: {
                page?: number;
                page_size?: number;
                status?: components["schemas"]["InvoiceStatus"] | null;
                order_id?: number | null;
                invoice_id__icontains?: string | null;
                order___quotation___quotation_id__icontains?: string | null;
                order___order_id__icontains?: string | null;
                order___customer___contact___name__icontains?: string | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedInvoiceOpt"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_invoice_simulate_invoice__invoice_id___put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                invoice_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["InvoiceUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Invoice"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    send_invoice_email_invoice__invoice_id__send_email__post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                invoice_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["InvoiceEmailSend"];
            };
        };
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    approve_invoice_invoice__invoice_id__approve__post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                invoice_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Invoice"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    cancel_invoice_invoice__invoice_id__cancel__post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                invoice_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Invoice"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
}
