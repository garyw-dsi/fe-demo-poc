/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/auth/login/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Login */
        post: operations["login_auth_login__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/refresh/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Refresh */
        post: operations["refresh_auth_refresh__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/profile/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Profile */
        get: operations["profile_auth_profile__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/verification_email/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Verification Email */
        get: operations["verification_email_auth_verification_email__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/verification_data/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Verification Data */
        get: operations["verification_data_auth_verification_data__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/permission_check/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Permission Check */
        get: operations["permission_check_auth_permission_check__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List User */
        get: operations["list_user_user__get"];
        put?: never;
        /** Create User */
        post: operations["create_user_user__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user/initial/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create Initial User */
        post: operations["create_initial_user_user_initial__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/registration_verification/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** User Registration Verification */
        get: operations["user_registration_verification_registration_verification__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user/{user_id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Retrieve User */
        get: operations["retrieve_user_user__user_id___get"];
        /** Update User */
        put: operations["update_user_user__user_id___put"];
        post?: never;
        /** Delete User */
        delete: operations["delete_user_user__user_id___delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/options/user/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List User Option */
        get: operations["list_user_option_options_user__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/change_password/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Change User Password */
        put: operations["change_user_password_change_password__put"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/reset_password/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Reset User Password */
        put: operations["reset_user_password_reset_password__put"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user/{user_id}/image/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Upload User Image */
        put: operations["upload_user_image_user__user_id__image__put"];
        post?: never;
        /** Delete User Image */
        delete: operations["delete_user_image_user__user_id__image__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/organization/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Create Organization */
        post: operations["create_organization_organization__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/organization/{organization_id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Retrieve Organization */
        get: operations["retrieve_organization_organization__organization_id___get"];
        /** Update Organization */
        put: operations["update_organization_organization__organization_id___put"];
        post?: never;
        /** Delete Organization */
        delete: operations["delete_organization_organization__organization_id___delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/organization/{organization_id}/transfer_maintainer/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Transfer Organization Maintainer */
        put: operations["transfer_organization_maintainer_organization__organization_id__transfer_maintainer__put"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/organization/{organization_id}/image/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** Upload Organization Image */
        put: operations["upload_organization_image_organization__organization_id__image__put"];
        post?: never;
        /** Delete Organization Image */
        delete: operations["delete_organization_image_organization__organization_id__image__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/group/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Group */
        get: operations["list_group_group__get"];
        put?: never;
        /** Create Group */
        post: operations["create_group_group__post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/group/{group_id}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Retrieve Group */
        get: operations["retrieve_group_group__group_id___get"];
        /** Update Group */
        put: operations["update_group_group__group_id___put"];
        post?: never;
        /** Delete Group */
        delete: operations["delete_group_group__group_id___delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/group/{group_id}/permissions/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Group Permissions */
        get: operations["get_group_permissions_group__group_id__permissions__get"];
        /** Set Group Permissions */
        put: operations["set_group_permissions_group__group_id__permissions__put"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/options/group/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Group Option */
        get: operations["list_group_option_options_group__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/permission/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List Permission */
        get: operations["list_permission_permission__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /**
         * AuthorizationMode
         * @enum {string}
         */
        AuthorizationMode: "any" | "all";
        /** Body_upload_organization_image_organization__organization_id__image__put */
        Body_upload_organization_image_organization__organization_id__image__put: {
            /**
             * Upload
             * Format: binary
             */
            upload: string;
        };
        /** Body_upload_user_image_user__user_id__image__put */
        Body_upload_user_image_user__user_id__image__put: {
            /**
             * Upload
             * Format: binary
             */
            upload: string;
        };
        /** Group */
        Group: {
            /** Pk */
            pk: number;
            /** Name */
            name: string;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            /**
             * Last Modified At
             * Format: date-time
             */
            last_modified_at: string;
            created_by: components["schemas"]["UserMin"];
            last_modified_by: components["schemas"]["UserMin"] | null;
            organization: components["schemas"]["OrganizationMin"];
        };
        /** GroupCreate */
        GroupCreate: {
            /** Name */
            name: string;
            /** Parent Id */
            parent_id: number;
        };
        /** GroupOpt */
        GroupOpt: {
            /** Pk */
            pk: number;
            /** Name */
            name: string;
        };
        /** GroupPermission */
        GroupPermission: {
            /** Pk */
            pk: number;
            /** Permissions */
            permissions: components["schemas"]["Permission"][];
        };
        /** GroupPermissionUpdate */
        GroupPermissionUpdate: {
            /** Permission Ids */
            permission_ids: number[];
        };
        /** GroupUpdate */
        GroupUpdate: {
            /** Name */
            name: string;
            /** Parent Id */
            parent_id: number;
        };
        /** HTTPValidationError */
        HTTPValidationError: {
            /** Detail */
            detail?: components["schemas"]["ValidationError"][];
        };
        /** InitialUserCreate */
        InitialUserCreate: {
            /** First Name */
            first_name: string;
            /** Last Name */
            last_name: string;
            /**
             * Email
             * Format: email
             */
            email: string;
            /** Password */
            password: string;
        };
        /** LoginForm */
        LoginForm: {
            /**
             * Email
             * Format: email
             */
            email: string;
            /** Password */
            password: string;
        };
        /** Organization */
        Organization: {
            /** Pk */
            pk: number;
            legal_type: components["schemas"]["OrganizationLegalType"];
            /** Legal Name */
            legal_name: string;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            /**
             * Last Modified At
             * Format: date-time
             */
            last_modified_at: string;
            created_by: components["schemas"]["UserMin"];
            last_modified_by: components["schemas"]["UserMin"] | null;
            image: components["schemas"]["OrganizationImageURL"];
            maintainer: components["schemas"]["UserMin"];
        };
        /** OrganizationCreate */
        OrganizationCreate: {
            legal_type: components["schemas"]["OrganizationLegalType"];
            /** Legal Name */
            legal_name: string;
        };
        /** OrganizationImageURL */
        OrganizationImageURL: {
            /** Url */
            url: string | null;
        };
        /**
         * OrganizationLegalType
         * @enum {string}
         */
        OrganizationLegalType: "Individual" | "Partnership" | "Limited Partnership" | "Limited Liability Partnership" | "Limited Liability Company" | "Public Limited Company" | "Private Limited Company" | "Corporation" | "Nonprofit Organization" | "Cooperative" | "Trust" | "Government Agency";
        /** OrganizationMin */
        OrganizationMin: {
            /** Pk */
            pk: number;
            legal_type: components["schemas"]["OrganizationLegalType"];
            /** Legal Name */
            legal_name: string;
            image: components["schemas"]["OrganizationImageURL"];
        };
        /** OrganizationUpdate */
        OrganizationUpdate: {
            legal_type: components["schemas"]["OrganizationLegalType"];
            /** Legal Name */
            legal_name: string;
        };
        /** PaginatedGroup */
        PaginatedGroup: {
            /** Total Items */
            total_items: number;
            /** Total Page */
            total_page: number;
            /** Page */
            page: number;
            /** Items */
            items: components["schemas"]["Group"][];
        };
        /** PaginatedGroupOpt */
        PaginatedGroupOpt: {
            /** Total Items */
            total_items: number;
            /** Total Page */
            total_page: number;
            /** Page */
            page: number;
            /** Items */
            items: components["schemas"]["GroupOpt"][];
        };
        /** PaginatedUser */
        PaginatedUser: {
            /** Total Items */
            total_items: number;
            /** Total Page */
            total_page: number;
            /** Page */
            page: number;
            /** Items */
            items: components["schemas"]["User"][];
        };
        /** PaginatedUserOpt */
        PaginatedUserOpt: {
            /** Total Items */
            total_items: number;
            /** Total Page */
            total_page: number;
            /** Page */
            page: number;
            /** Items */
            items: components["schemas"]["UserOpt"][];
        };
        /** Permission */
        Permission: {
            /** Pk */
            pk: number;
            /** App */
            app: string;
            /** Module */
            module: string;
            /** Submodule */
            submodule: string;
            /** Action */
            action: string;
        };
        /** Token */
        Token: {
            /** Access Token */
            access_token: string;
            /** Refresh Token */
            refresh_token: string;
            /** Token Type */
            token_type: string;
        };
        /** TransferOrganizationMaintainer */
        TransferOrganizationMaintainer: {
            /** Maintainer Id */
            maintainer_id: number;
        };
        /** User */
        User: {
            /** Pk */
            pk: number;
            /** First Name */
            first_name: string;
            /** Last Name */
            last_name: string;
            /**
             * Email
             * Format: email
             */
            email: string;
            image: components["schemas"]["UserImageURL"];
            /** Employment Status */
            employment_status: string;
            /** Is Superuser */
            is_superuser: boolean;
            /** Is Active */
            is_active: boolean;
            /** Is Verified */
            is_verified: boolean;
            /** Is Locked */
            is_locked: boolean;
            /** Last Login At */
            last_login_at: string | null;
            /** Need Change Password */
            need_change_password: boolean;
            /**
             * Created At
             * Format: date-time
             */
            created_at: string;
            /**
             * Last Modified At
             * Format: date-time
             */
            last_modified_at: string;
            created_by: components["schemas"]["UserMin"] | null;
            last_modified_by: components["schemas"]["UserMin"] | null;
            group: components["schemas"]["UserGroupMin"] | null;
        };
        /** UserChangePassword */
        UserChangePassword: {
            /** Token */
            token: string;
            /** Old Password */
            old_password: string;
            /** New Password */
            new_password: string;
        };
        /** UserCreate */
        UserCreate: {
            /** First Name */
            first_name: string;
            /** Last Name */
            last_name: string;
            /**
             * Email
             * Format: email
             */
            email: string;
            /** Group Id */
            group_id: number;
        };
        /** UserGroupMin */
        UserGroupMin: {
            /** Pk */
            pk: number;
            /** Name */
            name: string;
            organization: components["schemas"]["OrganizationMin"];
        };
        /** UserImageURL */
        UserImageURL: {
            /** Url */
            url: string | null;
        };
        /** UserMin */
        UserMin: {
            /** Pk */
            pk: number;
            /** First Name */
            first_name: string;
            /** Last Name */
            last_name: string;
            /**
             * Email
             * Format: email
             */
            email: string;
            image: components["schemas"]["UserImageURL"];
        };
        /** UserOpt */
        UserOpt: {
            /** Pk */
            pk: number;
            /** First Name */
            first_name: string;
            /** Last Name */
            last_name: string;
            /**
             * Email
             * Format: email
             */
            email: string;
            image: components["schemas"]["UserImageURL"];
        };
        /** UserResetPassword */
        UserResetPassword: {
            /** Token */
            token: string;
            /** New Password */
            new_password: string;
        };
        /** UserUpdate */
        UserUpdate: {
            /** First Name */
            first_name: string;
            /** Last Name */
            last_name: string;
            /** Group Id */
            group_id: number;
            /** Is Locked */
            is_locked: boolean;
        };
        /** ValidationError */
        ValidationError: {
            /** Location */
            loc: (string | number)[];
            /** Message */
            msg: string;
            /** Error Type */
            type: string;
        };
        /** VerificationTokenPayload */
        VerificationTokenPayload: {
            /** Scope */
            scope: string;
            /**
             * Email
             * Format: email
             */
            email: string;
            /**
             * Exp
             * Format: date-time
             */
            exp: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    login_auth_login__post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["LoginForm"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Token"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    refresh_auth_refresh__post: {
        parameters: {
            query?: never;
            header: {
                "refresh-token": string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Token"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    profile_auth_profile__get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["User"];
                };
            };
        };
    };
    verification_email_auth_verification_email__get: {
        parameters: {
            query: {
                context: string;
                email?: string | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    verification_data_auth_verification_data__get: {
        parameters: {
            query: {
                token: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["VerificationTokenPayload"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    permission_check_auth_permission_check__get: {
        parameters: {
            query: {
                actions: string;
                mode?: components["schemas"]["AuthorizationMode"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    list_user_user__get: {
        parameters: {
            query?: {
                page?: number;
                page_size?: number;
                email?: string | null;
                first_name?: string | null;
                last_name?: string | null;
                is_superuser?: boolean | null;
                is_active?: boolean | null;
                is_verified?: boolean | null;
                is_locked?: boolean | null;
                group_id?: boolean | null;
                email__icontains?: string | null;
                first_name__icontains?: string | null;
                last_name__icontains?: string | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedUser"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_user_user__post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UserCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["User"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_initial_user_user_initial__post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["InitialUserCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["User"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    user_registration_verification_registration_verification__get: {
        parameters: {
            query: {
                token: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["User"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    retrieve_user_user__user_id___get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                user_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["User"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_user_user__user_id___put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                user_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UserUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["User"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_user_user__user_id___delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                user_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    list_user_option_options_user__get: {
        parameters: {
            query?: {
                page?: number;
                page_size?: number;
                email?: string | null;
                first_name?: string | null;
                last_name?: string | null;
                is_superuser?: boolean | null;
                is_active?: boolean | null;
                is_verified?: boolean | null;
                is_locked?: boolean | null;
                group_id?: boolean | null;
                email__icontains?: string | null;
                first_name__icontains?: string | null;
                last_name__icontains?: string | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedUserOpt"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    change_user_password_change_password__put: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UserChangePassword"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["User"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    reset_user_password_reset_password__put: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UserResetPassword"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["User"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    upload_user_image_user__user_id__image__put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                user_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "multipart/form-data": components["schemas"]["Body_upload_user_image_user__user_id__image__put"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["User"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_user_image_user__user_id__image__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                user_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["User"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_organization_organization__post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["OrganizationCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Organization"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    retrieve_organization_organization__organization_id___get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Organization"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_organization_organization__organization_id___put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["OrganizationUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Organization"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_organization_organization__organization_id___delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    transfer_organization_maintainer_organization__organization_id__transfer_maintainer__put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["TransferOrganizationMaintainer"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Organization"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    upload_organization_image_organization__organization_id__image__put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "multipart/form-data": components["schemas"]["Body_upload_organization_image_organization__organization_id__image__put"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Organization"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_organization_image_organization__organization_id__image__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                organization_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Organization"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    list_group_group__get: {
        parameters: {
            query?: {
                page?: number;
                page_size?: number;
                name?: string | null;
                parent_id?: number | null;
                name__icontains?: string | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedGroup"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_group_group__post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["GroupCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Group"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    retrieve_group_group__group_id___get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                group_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Group"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    update_group_group__group_id___put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                group_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["GroupUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Group"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_group_group__group_id___delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                group_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_group_permissions_group__group_id__permissions__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                group_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GroupPermission"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    set_group_permissions_group__group_id__permissions__put: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                group_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["GroupPermissionUpdate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GroupPermission"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    list_group_option_options_group__get: {
        parameters: {
            query?: {
                page?: number;
                page_size?: number;
                name?: string | null;
                parent_id?: number | null;
                name__icontains?: string | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PaginatedGroupOpt"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    list_permission_permission__get: {
        parameters: {
            query?: {
                app?: string | null;
                module?: string | null;
                submodule?: string | null;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Permission"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
}
